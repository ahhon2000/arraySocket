#!/usr/bin/python3
try:from pathlib import Path as P;R=P.resolve;E=P.exists; F = R(P(__file__));\
    L = lambda p: p / 'cfg.py'; from handyPyUtil import A; exec(A)
except: O=open(R(next(filter(E,map(L,F.parents))))); exec(O.read()); O.close()

import os, sys
import time
from pathlib import Path
from threading import Thread, Event
from more_itertools import first

from handyPyUtil.db import Database_mysql

from arraySocket import client, server
from ..server.dbUsersTbl import DBUsersTbl
from .. import ASUser

MYSQL_CNF = Path(sys.argv[0]).absolute().parent / 'mysql.cnf'


def getUser(utbl, name):
    q = utbl.dbobj
    urow = q[0] / f"""
        SELECT * FROM `{utbl.TRUser._tableName}`
    """

    keys = q(aslist=True, uid=urow['id']) / (lambda r: r['authKey']) / f"""
        SELECT authKey
        FROM `{utbl.TRAuthKey._tableName}`
        WHERE user = %(uid)s
    """

    u = ASUser(name=urow['name'], authKeys=keys, isAdmin=urow['isAdmin'])

    return u

def doTest():
    # Check if the server's users table can connect to a MySQL DB

    srv = server.Server(
        UsersTblCls = DBUsersTbl,
        usersTbl_kwarg = {
            'db_kwarg': {
                'read_default_file': str(MYSQL_CNF),
            },
        },
    )

    assert isinstance(srv.usersTbl, DBUsersTbl)
    q = srv.usersTbl.dbobj
    assert isinstance(q, Database_mysql)
    assert (q[0]['x'] / "SELECT 1 as x") == 1

    srv.usersTbl.addAuthKey('admin', 'mysecret')
    u = getUser(srv.usersTbl, 'admin')
    assert u.name == 'admin'
    assert 'mysecret' in u.authKeys

    # Check if the Server constructor understands shorcut options

    srv = server.Server(
        usersStorage = 'db',
        read_default_file = str(MYSQL_CNF),
        adminAuthKey = 'mysecret2',
    )

    assert isinstance(srv.usersTbl, DBUsersTbl)
    q = srv.usersTbl.dbobj
    assert isinstance(q, Database_mysql)

    u = getUser(srv.usersTbl, 'admin')

    assert len(u.authKeys) == 1
    assert u.name == 'admin'
    assert first(u.authKeys) == 'mysecret2'
    assert u.isAdmin

doTest()
